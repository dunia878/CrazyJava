package net;

import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class ReadHtml {

	public ReadHtml() {
		// TODO Auto-generated constructor stub
	}

	/*
	 * 获取所指向url的输出流(指所有内容)
	 * 
	 * @urlString url路径 如:http://www.baidu.com返回的String 则为html代码
	 */
	private String getHtml(String urlString) {
		try {
			StringBuffer html = new StringBuffer();
			java.net.URL url = new java.net.URL(urlString); // 根据 String 表示形式创建
															// URL 对象。
			java.net.HttpURLConnection conn = (java.net.HttpURLConnection) url
					.openConnection();// 返回一个 URLConnection 对象，它表示到 URL
										// 所引用的远程对象的连接。
			java.io.InputStreamReader isr = new java.io.InputStreamReader(
					conn.getInputStream());// 返回从此打开的连接读取的输入流。
			java.io.BufferedReader br = new java.io.BufferedReader(isr);// 创建一个使用默认大小输入缓冲区的缓冲字符输入流。

			String temp;
			long startMilli = System.currentTimeMillis();
			int i = 0;
			while ((temp = br.readLine()) != null) { // 按行读取输出流
				// if (!temp.trim().equals("")) {
				// System.out.println(++i + "   "
				// + (System.currentTimeMillis() - startMilli));
				if (temp.contains("href=\"http://dl.vmall.com/")) {
					html.append(temp).append("\n"); // 读完每行后换行
				}

			}
			br.close(); // 关闭
			isr.close(); // 关闭
			return html.toString(); // 返回此序列中数据的字符串表示形式。
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	public static void main(String[] args) throws IOException {
		String[] tids = { "5641", "5642", "5643", "5644", "5645", "5646",
				"5647", "5648", "5649", "5650", "5651", "5652", "5653", "5654",
				"5656", "5657", "5658", "5659", "5660", "4359", "4360", "4361",
				"4362", "4363", "4364", "4365", "4366", "4367", "4368", "4369",
				"4370", "4371", "4372", "4373", "4374", "4375", "4376", "4377",
				"4378", "4379", "4381", "4382", "4383", "4384", "4385", "4386",
				"4387", "4388", "4389", "4390", "4391", "4392", "4394", "4395",
				"4396", "4397", "4398", "4399", "4400", "4401", "4402", "4403",
				"4404", "4405", "4406", "4407", "4408", "4409", "4410", "4418",
				"4419", "4421", "4422", "4423", "4424", "4425", "4426", "4428",
				"4429", "4430", "4431", "4433", "4434", "4435", "4436", "4437",
				"4438", "4439", "4440", "4441", "4444", "4445", "4446", "4448",
				"4449", "4451", "4452", "4453", "4454", "4455", "4457", "4459",
				"4460", "4461", "4462", "4464", "4641", "4642", "4643", "4644",
				"4645", "4646", "4647", "4663", "4665", "4666", "4667", "4668",
				"4669", "4670", "4671", "4674", "4675", "4682", "4683", "4684",
				"4685", "4686", "4687", "4688", "4689", "4690", "4691", "4839",
				"4840", "4841", "4073", "4074", "4135", "4330", "4416", "4493",
				"4661", "4796", "4830", "4886", "4911", "5030", "5093", "5167",
				"5209", "5277", "5401", "5542", "5615", "5776", "5860", "5975",
				"6059", "6092", "6128", "6205", "6288", "6385", "6434", "6451",
				"6465", "6532", "6533", "6534", "6797", "6810", "6852", "6855",
				"6864", "6927", "6936", "6959", "7000", "7006", "7108", "7230",
				"7346", "7488", "7640", "7828", "7978", "8228", "8339", "8507",
				"8605", "8819", "8945", "9031", "9131", "9223", "9332", "9402",
				"9549", "9599", "9694", "9745", "9785", "9854", "9973",
				"10003", "10228", "10464", "10465", "10594", "10613", "10651",
				"10697", "10739", "10790", "10800", "10857", "10858", "10977",
				"11011", "11052", "11080", "11108", "11168", "11300", "11319",
				"11345", "11365", "11463", "11494", "11520", "11563", "11591",
				"11618", "11652", "11721", "11766", "11797", "11824", "11851",
				"11852", "12079", "12118", "12141", "12169", "12219", "12252",
				"12270", "12316", "12381", "12528", "12570", "12593", "12794",
				"12795", "12796", "12847", "12900", "12933", "12934", "13026",
				"13075", "13076", "13098", "13142", "13157", "13158", "13238",
				"13534", "13974", "14202", "14225", "14234", "14245", "14256",
				"14272", "14289", "14294", "14295", "14319", "14328", "14334",
				"14371", "14404", "14418", "14419", "14430", "14443", "14460",
				"14470", "14491", "14502", "14545", "14569", "14590", "14602",
				"14615", "14626", "14638", "14639", "14705", "14759", "14760",
				"14761", "14809", "14836", "14852", "14892", "14944", "14973",
				"14974", "15002", "15025", "15049", "15089", "15114", "15134",
				"15135", "15192", "15219", "15228", "15229", "15272", "15323",
				"15348", "15366", "15422", "15423", "15440", "15448", "15481",
				"15498", "15509", "15510", "15530", "15569", "15574", "15587",
				"15609", "15651", "15658", "15748", "15779", "15781", "15801",
				"15806", "15825", "15842", "15858", "15863", "15878", "15888",
				"15893", "15927", "15928", "15941", "15954", "15969", "15999",
				"16022", "16037", "16054", "16072", "16106", "16129", "16169",
				"16189", "16207", "16227", "16253", "16263", "16296", "16319",
				"16352", "16354", "16370", "16376", "16404", "16424", "16433",
				"16456", "16477", "16499", "16515", "16540", "16561", "16585",
				"16606", "16633", "16666", "16690", "16705", "16728", "16746",
				"16762", "16798", "16812", "16838", "16857", "16873", "16888",
				"16908", "16932", "16948", "16966", "16982", "16997", "17012",
				"17030", "17047", "17062", "17078", "17089", "17110", "17151",
				"17179", "17195", "17214", "17324", "17359", "17370", "17380",
				"17408", "17414", "17434", "17453", "17472", "17503", "17531",
				"17563", "17585", "17625", "17638", "17659", "17698", "17704",
				"17719", "17761", "17762", "17788", "17801", "17817", "17856",
				"17857", "17961", "17962", "17963", "17964", "17982", "18000",
				"18050", "18072", "18127", "20846", "20847", "20848", "20871",
				"20910", "20960", "21090", "21091", "21130", "21191", "21236",
				"21266", "21280", "21309", "21335", "21395", "21488", "21489",
				"21496", "21497", "21560", "21680", "21681", "21682", "21683",
				"21684", "21767", "21768", "21842", "21843", "21844", "21845",
				"21846", "22170", "22171", "22194", "22226", "22333", "22371",
				"22438", "22470", "22545", "22580", "22629", "22645", "22703",
				"22732", "22750", "22790", "22820", "22884", "22918", "22976",
				"23016", "23072", "23097", "23133", "23163", "23221", "23321",
				"23373", "23447", "23497", "23520", "23563", "23589", };
		File file = new java.io.File("c:\\tids.txt");
		int i = 0;
		try (FileWriter fw = new FileWriter(file);) {
			for (String tid : tids) {
				System.out.println(++i);
				fw.append(new ReadHtml()
						.getHtml("http://www.itokoo.com/read.php?tid=" + tid));
				fw.flush();
			}
		}
	}

}
